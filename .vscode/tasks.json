{
        "version": "2.0.0",
        "tasks": [
                // ==================== AUTONOMOUS DRIVING SYSTEM ====================
                {
                        "label": "🚗 Start Autonomous Driving System",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 launch detect autonomous_driving.launch.py",
                        "presentation": {
                                "panel": "new",
                                "group": "autonomous-system",
                                "showReuseMessage": false,
                                "focus": true
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        },
                        "problemMatcher": []
                },
                {
                        "label": "🤖 Start Motor Control Only",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run control motor_node",
                        "presentation": {
                                "panel": "new",
                                "group": "autonomous-system",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "👁️ Start Obstacle Detection",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run detect obstacle_node",
                        "presentation": {
                                "panel": "new",
                                "group": "autonomous-system",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🗺️ Start Path Planner",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run detect path_planner",
                        "presentation": {
                                "panel": "new",
                                "group": "autonomous-system",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🧠 Start Behavior Manager",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run detect behavior_manager",
                        "presentation": {
                                "panel": "new",
                                "group": "autonomous-system",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🎮 Start Control Interface",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run detect control_interface",
                        "presentation": {
                                "panel": "new",
                                "group": "autonomous-system",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                // ==================== SENSOR NODES ====================
                {
                        "label": "Start ROS Nodes Split",
                        "dependsOn": [
                                "Run Get Lidar Node",
                                "Run Get IMU Node",
                                "Run Get RGBD Node",
                                "Run Get Encoder Node",
                                "Run Get Targeting Camera Node"
                        ],
                        "dependsOrder": "parallel",
                        "type": "shell",
                        "command": "echo 'Starting ROS2 sensor nodes...'",
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Get Lidar Node",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run get lidar_node",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-nodes",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Get IMU Node",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run get imu_node",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-nodes",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Get RGBD Node",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run get rgbd_camera_node",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-nodes",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Get Encoder Node",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run get encoder_node",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-nodes",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Get Targeting Camera Node",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run get targeting_camera_node",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-nodes",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                // Rest of the file remains the same
                {
                        "label": "Start Static Transforms Split",
                        "dependsOn": [
                                "Run Static Transform Publisher",
                                "Run Static Transform Publisher (map->imu_link)",
                                "Run Static Transform Publisher (map->lidar_link)",
                                "Run Static Transform Publisher (map->odom)",
                                "Run Static Transform Publisher (map->camera_link)"
                        ],
                        "dependsOrder": "parallel",
                        "type": "shell",
                        "command": "echo 'Starting static transform publishers...'",
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Static Transform Publisher",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 1 map camera_link",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-static",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Static Transform Publisher (map->imu_link)",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 1 map imu_link",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-static",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Static Transform Publisher (map->lidar_link)",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 1 map lidar_link",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-static",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Static Transform Publisher (map->odom)",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 1 map odom",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-static",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Run Static Transform Publisher (map->camera_link)",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 1 map camera_link",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-static",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                // ==================== COMPLETE SYSTEM STARTUP ====================
                {
                        "label": "🚀 Start Complete System (Sensors + Autonomous)",
                        "dependsOn": [
                                "Start ROS Nodes Split",
                                "Start Static Transforms Split"
                        ],
                        "dependsOrder": "sequence",
                        "type": "shell",
                        "command": "sleep 3 && source install/setup.bash && ros2 launch detect autonomous_driving.launch.py",
                        "presentation": {
                                "panel": "new",
                                "group": "complete-system",
                                "showReuseMessage": false,
                                "focus": true
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        },
                        "problemMatcher": []
                },
                {
                        "label": "Start All ROS Tasks",
                        "dependsOn": [
                                "Start ROS Nodes Split",
                                "Start Static Transforms Split"
                        ],
                        "dependsOrder": "parallel",
                        "type": "shell",
                        "command": "echo 'Starting all sensor ROS tasks...'",
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                // ==================== UNITY CONTROL ====================
                {
                        "label": "🎮 Launch Unity Project",
                        "type": "shell",
                        "command": "cd /home/kaplan/Downloads/arac && unity &",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "/home/kaplan/Downloads/arac"
                        }
                },
                {
                        "label": "🎮 Open Unity Project Automatically",
                        "type": "shell",
                        "command": "cd /home/kaplan/Downloads/arac && unity-editor -projectPath . &",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "/home/kaplan/Downloads/arac"
                        }
                },
                {
                        "label": "🔧 Check Unity TCP Connection",
                        "type": "shell",
                        "command": "echo 'Checking Unity TCP connection on port 9999...' && netstat -tuln | grep 9999 && echo 'TCP connections:' && netstat -an | grep 9999",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        }
                },
                {
                        "label": "🎯 Force Autonomous Mode ON",
                        "type": "shell",
                        "command": "source install/setup.bash && echo 'Forcing autonomous mode...' && ros2 topic pub --rate 1 /driving_mode std_msgs/String 'data: \"autonomous\"' &",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🎯 Test Direct Motor Commands",
                        "type": "shell",
                        "command": "source install/setup.bash && echo 'Testing direct motor commands...' && ros2 topic pub --rate 10 /cmd_vel geometry_msgs/Twist '{linear: {x: 0.5}, angular: {z: 0.0}}' &",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🔍 Debug ROS2 Topics Real-time",
                        "type": "shell",
                        "command": "source install/setup.bash && echo '=== DEBUGGING ROS2 TOPICS ===' && echo 'Autonomous Status:' && timeout 3s ros2 topic echo /autonomous_status --once && echo -e '\\nDriving Mode:' && timeout 3s ros2 topic echo /driving_mode --once && echo -e '\\nCMD Vel:' && timeout 3s ros2 topic echo /cmd_vel --once && echo -e '\\nMotor Speeds:' && timeout 3s ros2 topic echo /motor_speeds --once",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🚗 Complete Autonomous Test Sequence",
                        "type": "shell",
                        "command": "source install/setup.bash && echo 'Starting complete autonomous test...' && echo '1. Setting autonomous mode...' && ros2 topic pub --once /driving_mode std_msgs/String 'data: \"autonomous\"' && sleep 2 && echo '2. Sending goal position...' && ros2 topic pub --once /goal_pose geometry_msgs/PoseStamped '{header: {frame_id: \"map\"}, pose: {position: {x: 3.0, y: 0.0, z: 0.0}, orientation: {w: 1.0}}}' && sleep 2 && echo '3. Checking status...' && timeout 3s ros2 topic echo /autonomous_status --once",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🔄 Restart Motor Node Only",
                        "type": "shell",
                        "command": "source install/setup.bash && echo 'Restarting motor node...' && pkill -f motor_node; sleep 1 && ros2 run control motor_node",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "⚠️ Kill All ROS2 Processes",
                        "type": "shell",
                        "command": "echo 'Killing all ROS2 processes...' && pkill -f ros2 && pkill -f python3.*detect && pkill -f python3.*control && echo 'All ROS2 processes terminated.'",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        }
                },
                {
                        "label": "🚀 Complete Autonomous System Startup",
                        "dependsOn": [
                                "🚗 Start Autonomous Driving System"
                        ],
                        "dependsOrder": "sequence",
                        "type": "shell",
                        "command": "sleep 5 && source install/setup.bash && echo 'Setting autonomous mode...' && ros2 topic pub --once /driving_mode std_msgs/String 'data: \"autonomous\"' && sleep 2 && echo 'Sending test goal...' && ros2 topic pub --once /goal_pose geometry_msgs/PoseStamped '{header: {frame_id: \"map\"}, pose: {position: {x: 2.0, y: 0.0, z: 0.0}, orientation: {w: 1.0}}}' && echo 'Autonomous system ready!'",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false,
                                "focus": true
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🔧 Fix Unity AI Control",
                        "type": "shell",
                        "command": "echo 'Checking Unity TankController script...' && grep -n 'aiControlEnabled.*=' /home/kaplan/Downloads/arac/Assets/Scripts/TankController.cs | head -5",
                        "presentation": {
                                "panel": "new",
                                "group": "unity-control",
                                "showReuseMessage": false
                        }
                },
                // ==================== BUILD AND MONITORING ====================
                {
                        "label": "🔨 Build All Packages",
                        "type": "shell",
                        "command": "colcon build",
                        "presentation": {
                                "panel": "new",
                                "group": "build-system",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        },
                        "problemMatcher": []
                },
                {
                        "label": "🔨 Build Detect Package Only",
                        "type": "shell",
                        "command": "colcon build --packages-select detect",
                        "presentation": {
                                "panel": "new",
                                "group": "build-system",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        },
                        "problemMatcher": []
                },
                {
                        "label": "🔨 Build Control Package Only",
                        "type": "shell",
                        "command": "colcon build --packages-select control",
                        "presentation": {
                                "panel": "new",
                                "group": "build-system",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        },
                        "problemMatcher": []
                },
                {
                        "label": "📊 Monitor System Topics",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 topic list && echo '\\n=== Topic Frequencies ===' && ros2 topic hz /cmd_vel & ros2 topic hz /get_lidar/scan & ros2 topic hz /autonomous_status & wait",
                        "presentation": {
                                "panel": "new",
                                "group": "monitoring",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🎯 Test Manual Control",
                        "type": "shell",
                        "command": "source install/setup.bash && echo 'Testing manual control...' && ros2 topic pub --once /manual_cmd_vel geometry_msgs/Twist '{linear: {x: 1.0}, angular: {z: 0.0}}'",
                        "presentation": {
                                "panel": "new",
                                "group": "testing",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🎯 Set Autonomous Mode",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 topic pub --once /driving_mode std_msgs/String 'data: \"autonomous\"'",
                        "presentation": {
                                "panel": "new",
                                "group": "testing",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🎯 Set Manual Mode",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 topic pub --once /driving_mode std_msgs/String 'data: \"manual\"'",
                        "presentation": {
                                "panel": "new",
                                "group": "testing",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🎯 Send Goal Position",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 topic pub --once /goal_pose geometry_msgs/PoseStamped '{header: {frame_id: \"map\"}, pose: {position: {x: 5.0, y: 3.0, z: 0.0}, orientation: {w: 1.0}}}'",
                        "presentation": {
                                "panel": "new",
                                "group": "testing",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "🚨 Emergency Stop",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 topic pub --once /emergency_stop std_msgs/Bool 'data: true'",
                        "presentation": {
                                "panel": "new",
                                "group": "testing",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "✅ Clear Emergency Stop",
                        "type": "shell",
                        "command": "source install/setup.bash && ros2 topic pub --once /emergency_stop std_msgs/Bool 'data: false'",
                        "presentation": {
                                "panel": "new",
                                "group": "testing",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        }
                },
                {
                        "label": "Build Workspace",
                        "type": "shell",
                        "command": "colcon build",
                        "presentation": {
                                "panel": "new",
                                "group": "ros2-build",
                                "showReuseMessage": false
                        },
                        "options": {
                                "cwd": "${workspaceFolder}/.."
                        },
                        "problemMatcher": []
                }
        ]
}